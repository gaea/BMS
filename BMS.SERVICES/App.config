<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!-- ********* CONFIGURACIÓN LOG4NET ********* -->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net"/>
  </configSections>
  
  <appSettings>
    <!-- ********* PROCESO ********* -->
    <add key="ServiceDescription" value="BMS.Service.Entry"/>
    <add key="ServiceDisplayName" value="BMS.Service.Entry"/>
    <add key="ServiceName" value="BMS.Service.Entry"/>
    <add key="ServiceBiometricIPDevice" value="192.168.0.125"/>
    <add key="ServiceBiometricPortDevice" value="4370"/>

    <add key="IP" value="192.168.0.101"/>
    <add key="Port" value="4370"/>
    <add key="ProcessType" value="Entry"/>
    <add key="IntervalValidateProcessStatus" value="1000"/>
    <add key="MachineNumber" value="1"/>
    <add key="Delay" value="3000"/>

    <add key="Execute" value="TWA.CanEntryPerson"/>

    <!--Procedimieto para registrar la autorizacion-->
    <add key="CreateAuthorization" value="TWA.CreateAuthorization"/>

    <!--Parametros-->
    <!--ID Presona que autoriza-->
    <add key="ID_PersonAuthorizing" value="12345685"/>
    <!--Motivo del registro de la autorizacion-->
    <add key="Reason_Message" value="Funcionario sin programacion y pendiente de autorizacion"/>

    <!--Procedimieto para registrar un ingreso-->
    <add key="CreateEntryRegister" value="TWA.CreateEntryRegister"/>

    <!--Parametros-->
    <!--Tipo de ingreso (Ingreso o Salida)-->
    <add key="Message" value="Salida"/>

    <add key="GetFunctionary" value="
			SELECT 	Tbl_Funcionarios.IdFuncionario AS DOCUMENT_NUMBER
		, ( Tbl_Funcionarios.NomFuncionario + ' ' + Tbl_Funcionarios.ApeFuncionario ) AS NAME
		, Tbl_Funcionarios.Empresa AS COMPANY
		, Tbl_Funcionarios.NumeroSede AS HEADQUARTER
		, Tbl_Funcionarios.CodigoCargo AS CHARGE_CODE
		, Tbl_Funcionarios.*
		FROM 	Tbl_Funcionarios	
		WHERE 	((Tbl_Funcionarios.CodEmpleado) = {0} );"/>

    <add key="GetTurnFunctionary" value="
			SELECT 	Tbl_Funcionarios.CodEmpleado AS ID_BIOMETRIC
		, Tbl_TurnosPorFuncionario.IdFuncionario AS DOCUMENT_NUMBER
		, (Tbl_Funcionarios.NomFuncionario+' '+Tbl_Funcionarios.ApeFuncionario) AS NAME
		, Tbl_TurnosPorFuncionario.Fecha AS TURN_DATE
		, Tbl_TurnosPorFuncionario.CodigoTurno AS TURN_CODE
		, DateAdd('n',0 ,Format(Tbl_TurnosPorFuncionario.Fecha + Tbl_Turnos.HoraInicial ,'yyyy/mm/dd hh:nn:ss')) AS TURN_HOUR_IN
		, Tbl_Turnos.HorasxTurno AS TOTAL_HOURS
		, Tbl_ParametrosxEmpresa.MinutosAntesLlegada AS MINUTES_BEFORE_ENTRY
		, Tbl_ParametrosxEmpresa.MinutosDespuesLlegada AS MINUTES_AFTER_ENTRY
		, '60' AS TOLERANCY_BEFORE
		, '60' AS TOLERANCY_AFTER
		, Tbl_Sedes.Sede AS HEADQUARTER
		, Tbl_Empresa.NombreEmpresa AS COMPANY
		, Tbl_Cargos.Cargo AS CHARGE
		, Tbl_CentrosCosto.NombreCentroCosto AS COST_CENTER
FROM Tbl_CentrosCosto INNER JOIN (Tbl_Cargos INNER JOIN (Tbl_Empresa INNER JOIN (((Tbl_Funcionarios INNER JOIN Tbl_ParametrosxEmpresa ON Tbl_Funcionarios.Empresa = Tbl_ParametrosxEmpresa.Id_Tercero) INNER JOIN (Tbl_Turnos INNER JOIN Tbl_TurnosPorFuncionario ON Tbl_Turnos.CodigoTurno = Tbl_TurnosPorFuncionario.CodigoTurno) ON Tbl_Funcionarios.IdFuncionario = Tbl_TurnosPorFuncionario.IdFuncionario) INNER JOIN Tbl_Sedes ON Tbl_Funcionarios.NumeroSede = Tbl_Sedes.NumeroSede) ON (Tbl_Empresa.Id_Tercero = Tbl_ParametrosxEmpresa.Id_Tercero) AND (Tbl_Empresa.Id_Tercero = Tbl_Funcionarios.Empresa)) ON Tbl_Cargos.CodigoCargo = Tbl_Funcionarios.CodigoCargo) ON Tbl_CentrosCosto.CentroCosto = Tbl_Funcionarios.CentroCosto
WHERE 	Tbl_Funcionarios.CodEmpleado = {0} 
	AND ((Format([Tbl_TurnosPorFuncionario].[Fecha] ,'yyyy/mm/dd')) Between Format(DateAdd('d' ,1 ,Now()) ,'yyyy/mm/dd') And Format(Now() ,'yyyy/mm/dd'));"/>

  </appSettings>
  <connectionStrings>
    <add name="CON_SQLSERVER" connectionString="Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=TWAccess;Data Source=LOCALHOST"/>
    <add name="CON_ACCESS" connectionString="DSN=BMS"/>
  </connectionStrings>

</configuration>